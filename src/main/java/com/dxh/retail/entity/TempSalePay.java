package com.dxh.retail.entity;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

public class TempSalePay implements Serializable {
    /**
	*记录ID<br/>
	**/
    private Long id;

    /**
	*所属商家ID<br/>
	**/
    private Long vendorId;

    /**
	*单据号<br/>
	**/
    private String orderNo;

    /**
	*客户支付金额 找零情况<br/>
	**/
    private BigDecimal payAmount;

    /**
	*实际支付金额<br/>
	**/
    private BigDecimal realPayAmount;

    /**
	*找零金额<br/>
	**/
    private BigDecimal changeAmount;

    /**
	*结算方式编码<br/>
	**/
    private String payCode;

    /**
	*结算方式对应的账户信息<br/>
	**/
    private String account;

    /**
	*汇率<br/>
	**/
    private BigDecimal exchangeRate;

    /**
	*储值标记 【0：会员 、1：储值 、2：计次预存】<br/>
	**/
    private Integer cardFlag;

    /**
	*支付扣点 商场提点<br/>
	**/
    private BigDecimal deductRate;

    /**
	*扣点金额<br/>
	**/
    private BigDecimal deduction;

    /**
	*支付信息 银行卡 券号 等等信息<br/>
	**/
    private String payInfo;

    /**
	*手续费扣率<br/>
	**/
    private BigDecimal poundageRate;

    /**
	*是否到账 针对线上对款<br/>
	**/
    private Integer payFlag;

    /**
	*是否已删除  【1：删除、 0：正常】<br/>
	**/
    private Integer df;

    /**
	*创建日期<br/>
	**/
    private Date createDate;

    /**
	*修改日期<br/>
	**/
    private Date modifyDate;

    /**
	*原salepay表id<br/>
	**/
    private Long oldId;

    /**
	*是否已推送至财务系统 0未推送 1已推送<br/>
	**/
    private Integer syncFlag;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tempsalepay
     *
     * @mbggenerated Wed Aug 12 14:27:33 GMT+08:00 2020
     */
    private static final long serialVersionUID = 1L;

    @Lable("记录ID")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Lable("所属商家ID")
    public Long getVendorId() {
        return vendorId;
    }

    public void setVendorId(Long vendorId) {
        this.vendorId = vendorId;
    }

    @Lable("单据号")
    public String getOrderNo() {
        return orderNo;
    }

    public void setOrderNo(String orderNo) {
        this.orderNo = orderNo == null ? null : orderNo.trim();
    }

    @Lable("客户支付金额 找零情况")
    public BigDecimal getPayAmount() {
        return payAmount;
    }

    public void setPayAmount(BigDecimal payAmount) {
        this.payAmount = payAmount;
    }

    @Lable("实际支付金额")
    public BigDecimal getRealPayAmount() {
        return realPayAmount;
    }

    public void setRealPayAmount(BigDecimal realPayAmount) {
        this.realPayAmount = realPayAmount;
    }

    @Lable("找零金额")
    public BigDecimal getChangeAmount() {
        return changeAmount;
    }

    public void setChangeAmount(BigDecimal changeAmount) {
        this.changeAmount = changeAmount;
    }

    @Lable("结算方式编码")
    public String getPayCode() {
        return payCode;
    }

    public void setPayCode(String payCode) {
        this.payCode = payCode == null ? null : payCode.trim();
    }

    @Lable("结算方式对应的账户信息")
    public String getAccount() {
        return account;
    }

    public void setAccount(String account) {
        this.account = account == null ? null : account.trim();
    }

    @Lable("汇率")
    public BigDecimal getExchangeRate() {
        return exchangeRate;
    }

    public void setExchangeRate(BigDecimal exchangeRate) {
        this.exchangeRate = exchangeRate;
    }

    @Lable("储值标记 【0：会员 、1：储值 、2：计次预存】")
    public Integer getCardFlag() {
        return cardFlag;
    }

    public void setCardFlag(Integer cardFlag) {
        this.cardFlag = cardFlag;
    }

    @Lable("支付扣点 商场提点")
    public BigDecimal getDeductRate() {
        return deductRate;
    }

    public void setDeductRate(BigDecimal deductRate) {
        this.deductRate = deductRate;
    }

    @Lable("扣点金额")
    public BigDecimal getDeduction() {
        return deduction;
    }

    public void setDeduction(BigDecimal deduction) {
        this.deduction = deduction;
    }

    @Lable("支付信息 银行卡 券号 等等信息")
    public String getPayInfo() {
        return payInfo;
    }

    public void setPayInfo(String payInfo) {
        this.payInfo = payInfo == null ? null : payInfo.trim();
    }

    @Lable("手续费扣率")
    public BigDecimal getPoundageRate() {
        return poundageRate;
    }

    public void setPoundageRate(BigDecimal poundageRate) {
        this.poundageRate = poundageRate;
    }

    @Lable("是否到账 针对线上对款")
    public Integer getPayFlag() {
        return payFlag;
    }

    public void setPayFlag(Integer payFlag) {
        this.payFlag = payFlag;
    }

    @Lable("是否已删除  【1：删除、 0：正常】")
    public Integer getDf() {
        return df;
    }

    public void setDf(Integer df) {
        this.df = df;
    }

    @Lable("创建日期")
    public Date getCreateDate() {
        return createDate;
    }

    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    @Lable("修改日期")
    public Date getModifyDate() {
        return modifyDate;
    }

    public void setModifyDate(Date modifyDate) {
        this.modifyDate = modifyDate;
    }

    @Lable("原salepay表id")
    public Long getOldId() {
        return oldId;
    }

    public void setOldId(Long oldId) {
        this.oldId = oldId;
    }

    @Lable("是否已推送至财务系统 0未推送 1已推送")
    public Integer getSyncFlag() {
        return syncFlag;
    }

    public void setSyncFlag(Integer syncFlag) {
        this.syncFlag = syncFlag;
    }
}